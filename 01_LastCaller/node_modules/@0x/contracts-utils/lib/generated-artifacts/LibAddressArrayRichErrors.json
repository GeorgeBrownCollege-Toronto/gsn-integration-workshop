{
    "schemaVersion": "2.0.0",
    "contractName": "LibAddressArrayRichErrors",
    "compilerOutput": {
        "abi": [],
        "devdoc": {
            "methods": {}
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158201097da084e9861466437377c2b4353789c105580bd33671872cf2179b7cb235564736f6c63430005100032",
                "opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LT SWAP8 0xDA ADDMOD 0x4E SWAP9 PUSH2 0x4664 CALLDATACOPY CALLDATACOPY PUSH29 0x2B4353789C105580BD33671872CF2179B7CB235564736F6C6343000510 STOP ORIGIN ",
                "sourceMap": "606:562:5:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
            },
            "deployedBytecode": {
                "linkReferences": {},
                "object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158201097da084e9861466437377c2b4353789c105580bd33671872cf2179b7cb235564736f6c63430005100032",
                "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LT SWAP8 0xDA ADDMOD 0x4E SWAP9 PUSH2 0x4664 CALLDATACOPY CALLDATACOPY PUSH29 0x2B4353789C105580BD33671872CF2179B7CB235564736F6C6343000510 STOP ORIGIN ",
                "sourceMap": "606:562:5:-;;;;;;;;"
            }
        }
    },
    "sources": {
        "src/LibAddressArrayRichErrors.sol": {
            "id": 5
        }
    },
    "sourceCodes": {
        "src/LibAddressArrayRichErrors.sol": "/*\n\n  Copyright 2019 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.9;\n\n\nlibrary LibAddressArrayRichErrors {\n\n    // bytes4(keccak256(\"MismanagedMemoryError(uint256,uint256)\"))\n    bytes4 internal constant MISMANAGED_MEMORY_ERROR_SELECTOR =\n        0x5fc83722;\n\n    // solhint-disable func-name-mixedcase\n    function MismanagedMemoryError(\n        uint256 freeMemPtr,\n        uint256 addressArrayEndPtr\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return abi.encodeWithSelector(\n            MISMANAGED_MEMORY_ERROR_SELECTOR,\n            freeMemPtr,\n            addressArrayEndPtr\n        );\n    }\n}\n"
    },
    "sourceTreeHashHex": "0x379dded26027ad464985f1a46cbd22430787ce82bff6de41411e512bfecc6fb6",
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.5.16+commit.9c3226ce.js",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 1000000,
                "details": {
                    "yul": true,
                    "deduplicate": true,
                    "cse": true,
                    "constantOptimizer": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul",
            "remappings": []
        }
    },
    "chains": {}
}
