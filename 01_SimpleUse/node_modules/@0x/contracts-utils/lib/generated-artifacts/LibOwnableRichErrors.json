{
    "schemaVersion": "2.0.0",
    "contractName": "LibOwnableRichErrors",
    "compilerOutput": {
        "abi": [],
        "devdoc": {
            "methods": {}
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820363191051b4bfc7c7964bbeacd627e9bcd11bc8aed02d90676a402278a4ecfe564736f6c63430005100032",
                "opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLDATASIZE BALANCE SWAP2 SDIV SHL 0x4B 0xFC PUSH29 0x7964BBEACD627E9BCD11BC8AED02D90676A402278A4ECFE564736F6C63 NUMBER STOP SDIV LT STOP ORIGIN ",
                "sourceMap": "26:804:12:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
            },
            "deployedBytecode": {
                "linkReferences": {},
                "object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820363191051b4bfc7c7964bbeacd627e9bcd11bc8aed02d90676a402278a4ecfe564736f6c63430005100032",
                "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLDATASIZE BALANCE SWAP2 SDIV SHL 0x4B 0xFC PUSH29 0x7964BBEACD627E9BCD11BC8AED02D90676A402278A4ECFE564736F6C63 NUMBER STOP SDIV LT STOP ORIGIN ",
                "sourceMap": "26:804:12:-;;;;;;;;"
            }
        }
    },
    "sources": {
        "src/LibOwnableRichErrors.sol": {
            "id": 12
        }
    },
    "sourceCodes": {
        "src/LibOwnableRichErrors.sol": "pragma solidity ^0.5.9;\n\n\nlibrary LibOwnableRichErrors {\n\n    // bytes4(keccak256(\"OnlyOwnerError(address,address)\"))\n    bytes4 internal constant ONLY_OWNER_ERROR_SELECTOR =\n        0x1de45ad1;\n\n    // bytes4(keccak256(\"TransferOwnerToZeroError()\"))\n    bytes internal constant TRANSFER_OWNER_TO_ZERO_ERROR_BYTES =\n        hex\"e69edc3e\";\n\n    // solhint-disable func-name-mixedcase\n    function OnlyOwnerError(\n        address sender,\n        address owner\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return abi.encodeWithSelector(\n            ONLY_OWNER_ERROR_SELECTOR,\n            sender,\n            owner\n        );\n    }\n\n    function TransferOwnerToZeroError()\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return TRANSFER_OWNER_TO_ZERO_ERROR_BYTES;\n    }\n}\n"
    },
    "sourceTreeHashHex": "0xfe1658c79678842a12d9b5841157eb871aaa810ed8a0223c715f49ad4c71d690",
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.5.16+commit.9c3226ce.js",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 1000000,
                "details": {
                    "yul": true,
                    "deduplicate": true,
                    "cse": true,
                    "constantOptimizer": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul",
            "remappings": []
        }
    },
    "chains": {}
}
